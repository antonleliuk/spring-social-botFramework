apply plugin: "maven"
dependencies {
    compile group: "org.springframework", name: "spring-web", version: "${springVersion}"

//    testCompile group: "edu.stanford.nlp", name: "stanford-corenlp", version: "3.6.0"
//    testCompile group: "com.ibm.icu", name: "icu4j", version: "57.1"

//    testCompile group: "edu.stanford.nlp", name: "stanford-parser", version: "3.6.0"

    testCompile group: "junit", name: "junit", version: "4.12"
}

publishing {
    publications {
        mavenJava(MavenPublication){
            groupId "ua.profitsoft"
            artifactId project.name
            version project.version

            from components.java

            pom.withXml {
                def root = asNode()
                root.appendNode("name", "Spring Social BotFramework")
                root.appendNode("description", "Spring Social connector for Microsoft BotFramework")
                root.appendNode("url", "https://github.com/antonleliuk/spring-social-botFramework")
                root.appendNode("inceptionYear", "2016")
                def scm = root.appendNode("scm")
                scm.appendNode("url", "https://github.com/antonleliuk/spring-social-botFramework")
                scm.appendNode("connection", "https://github.com/antonleliuk/spring-social-botFramework.git")
                scm.appendNode("developerConnection", "https://github.com/antonleliuk/spring-social-botFramework.git")
                def license = root.appendNode("licenses").appendNode("license")
                license.appendNode("name", "The Apache Software License, Version 2.0")
                license.appendNode("url", "http://www.apache.org/licenses/LICENSE-2.0.txt")
                license.appendNode("distribution", "repo")
                def developer = root.appendNode("developers").appendNode("developer")
                developer.appendNode("id", "anton.leliuk")
                developer.appendNode("name", "Anton Leliuk")
                developer.appendNode("email", "anton.leluk@gmail.com")
            }
            repositories {
                maven {
                    url "${rootProject.buildDir}/repo"
                }
            }
        }

        mavenSources(MavenPublication){
            groupId "org.springframework.social"
            artifactId project.name
            version project.version

            from components.java

            artifact sourceJar {
                classifier "sources"
            }
            repositories {
                maven {
                    url "${rootProject.buildDir}/repo"
                }
            }
        }
    }
}

ext.optionalDeps = []
ext.providedDeps = []

ext.optional = { optionalDeps << it }
ext.provided = { providedDeps << it }

install {
    repositories.mavenInstaller {
        customizePom(pom, project)
    }
}

def customizePom(pom, gradleProject) {
    pom.whenConfigured { generatedPom ->
        // respect "optional" and "provided" dependencies
        gradleProject.optionalDeps.each { dep ->
            generatedPom.dependencies.findAll { it.artifactId == dep.name }*.optional = true
        }
        gradleProject.providedDeps.each { dep ->
            generatedPom.dependencies.findAll { it.artifactId == dep.name }*.scope = "provided"
        }

        // eliminate test-scoped dependencies (no need in maven central poms)
        generatedPom.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        generatedPom.project {
            name = "Spring Social BotFramework"
            description = "Spring Social connector for Microsoft BotFramework"
            url = "https://github.com/antonleliuk/spring-social-botFramework"
            organization {
                name = "SpringSocial"
                url = "http://springsource.org/spring-social"
            }
            licenses {
                license {
                    name "The Apache Software License, Version 2.0"
                    url "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    distribution "repo"
                }
            }
            scm {
                url = "https://github.com/antonleliuk/spring-social-botFramework"
                connection = "scm:git:git://github.com/antonleliuk/spring-social-botFramework.git"
                developerConnection = "scm:git:git://github.com/antonleliuk/spring-social-botFramework.git"
            }
            developers {
                developer {
                    id = "anton.leliuk"
                    name = "Anton Leliuk"
                    email = "anton.leluk@gmail.com"
                }
            }
        }
    }
}